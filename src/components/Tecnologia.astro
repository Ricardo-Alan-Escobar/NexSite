---
const techIcons = [
  { name: "React", icon: "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg" },
  { name: "Node.js", icon: "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg" },
  { name: "Astro", icon: "https://astro.build/assets/press/astro-icon-light.png" },
  { name: "AWS", icon: "https://upload.wikimedia.org/wikipedia/commons/9/93/Amazon_Web_Services_Logo.svg" }, 
  { name: "Laravel", icon: "https://laravel.com/img/logomark.min.svg" },
  { name: "Google Cloud", icon: "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/googlecloud/googlecloud-original.svg" },
  { name: "Tailwind", icon: "https://upload.wikimedia.org/wikipedia/commons/d/d5/Tailwind_CSS_Logo.svg" },
  { name: "PostgreSQL", icon: "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/postgresql/postgresql-original.svg" },
  { name: "Docker", icon: "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/docker/docker-original.svg" },
  { name: "Kubernetes", icon: "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/kubernetes/kubernetes-plain.svg" },
  { name: "TensorFlow", icon: "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/tensorflow/tensorflow-original.svg" },
  { name: "Flutter", icon: "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/flutter/flutter-original.svg" }
];
---

<style>
  /* Animaciones de entrada */
  .fade-in {
    opacity: 0;
    transform: translateY(50px);
    transition: opacity 0.8s ease-out, transform 0.8s ease-out;
  }
  .fade-in.show {
    opacity: 1;
    transform: translateY(0);
  }

  /* Animación de rebote para los íconos */
  .tech-icon {
    opacity: 0;
    transform: scale(0.8);
    transition: opacity 0.5s ease-out, transform 0.5s ease-out;
  }
  .tech-icon.show {
    opacity: 1;
    transform: scale(1);
  }

  /* Hover en los íconos */
  .icon-hover:hover {
    transform: scale(1.1);
    transition: transform 0.3s ease-in-out;
  }
</style>

<section id="technologies" class="w-full py-12 md:py-12 lg:py-12 fade-in relative overflow-hidden">
  <!-- Fondo con gradiente -->
  <div class="absolute inset-0 bg-gradient-to-b from-gray-900 to-gray-950 opacity-80"></div>
  
  <!-- Efectos de iluminación -->
  <div class="absolute top-20 left-1/4 w-96 h-96 bg-blue-600/20 rounded-full blur-3xl opacity-20"></div>
  <div class="absolute bottom-20 right-1/4 w-96 h-96 bg-blue-400/20 rounded-full blur-3xl opacity-20"></div>
  
  <div class="container mx-auto px-4 md:px-6 relative z-10">
    <div class="text-center mb-12">
      <div class="inline-block rounded-lg bg-blue-100 px-3 py-1 text-sm text-blue-600 mb-4">
        Nuestra pila tecnológica
      </div>
      <h2 class="text-3xl font-bold tracking-tighter sm:text-5xl text-white fade-in">
        <span class="text-transparent bg-clip-text bg-gradient-to-r from-blue-700 to-blue-400">Tecnologías </span> que usamos
      </h2>
      <p class="mx-auto max-w-[700px] text-gray-500 md:text-xl mt-4 fade-in">
        Aprovechamos tecnologías de vanguardia para construir soluciones sólidas, escalables y preparadas para el futuro.
      </p>
    </div>
    <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-8 items-center justify-items-center">
      {techIcons.map((tech, index) => (
        <div class="flex flex-col items-center space-y-2 tech-icon" style={`transition-delay: ${index * 100}ms;`}>
          <div class="h-16 w-16 rounded-full bg-blue-100 flex items-center justify-center icon-hover">
            <img src={tech.icon || "/placeholder.svg"} alt={tech.name} class="h-10 w-10" />
          </div>
          <span class="font-medium text-white">{tech.name}</span>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const section = document.querySelector("#technologies");
    const elements = document.querySelectorAll(".fade-in, .tech-icon");

    if (section) {
      const observer = new IntersectionObserver(entries => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            elements.forEach(el => el.classList.add("show"));
          }
        });
      }, { threshold: 0.3 });

      observer.observe(section);
    }
  });
</script>

